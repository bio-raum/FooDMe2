process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        enabled: true,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    withName: 'HELPER_SAMPLE_REPORT' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/reports" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'HELPER_VSEARCH_MULTIQC|HELPER_DADA_MULTIQC|HELPER_ASSIGNEMENT_MULTIQC|HELPER_BENCHMARK' {
        publishDir = [
            path: { "${params.outdir}/reports" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'HELPER_VSEARCH_STATS|HELPER_DADA_STATS' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/reports" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: HELPER_KRONA_TABLE {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/reports" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'HELPER_REPORT_XLSX|KRONA_HTML|HELPER_BENCHMARK_XLSX|HELPER_HTML_REPORT' {
        publishDir = [
            path: { "${params.outdir}/reports/" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: CUTADAPT {
        ext.args = params.cutadapt_options
        publishDir = [
            path: { "${params.outdir}/cutadapt" },
            mode: params.publish_dir_mode,
            enabled: params.store_reads,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ] 
    }
    withName: FASTP_METRICS {
        ext.suffix = "adaptertrim.fastq.gz"
        publishDir = [
            path: { "${params.outdir}/FASTP_metrics" },
            mode: params.publish_dir_mode,
            enabled: params.store_reads
        ]
    }
    withName: FASTP_TRIM {
        ext.args = params.fastp_options
        publishDir = [
            path: { "${params.outdir}/FASTP_trimming" },
            mode: params.publish_dir_mode,
            enabled: params.store_reads
        ]
    }
    withName: FASTX_REVERSE_COMPLEMENT {
        publishDir = [
            path: { "${params.outdir}/cutadapt" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: NANOFILT {
        ext.args = "--maxlength ${params.amplicon_max_length} -l ${params.amplicon_min_length} -q ${params.reads_min_q}"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/nanofilt" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: NANOPLOT {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/qc/nanoplot" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/custom" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }
    // withName: MULTIQC {
    //     publishDir = [
    //         path: { "${params.outdir}/reports" },
    //         mode: params.publish_dir_mode,
    //         enabled: true,
    //         saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    //     ]
    // }

}