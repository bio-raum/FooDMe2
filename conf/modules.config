process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        enabled: true,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    withName: UNZIP_REFERENCES {
        publishDir = [
            path: { "${params.reference_base}/foodme2/${params.reference_version}/" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: BLAST_BLASTN {
        ext.args = [
            "-task 'megablast'", 
            "-evalue ${params.blast_evalue}",
            "-perc_identity ${params.blast_perc_id}",
            "-qcov_hsp_perc ${params.blast_qcov}",
            "-outfmt '6 qseqid sseqid evalue pident bitscore sacc staxid length mismatch gaps stitle'",
            params.disable_low_complexity ? "${params.blast_low_complexity}" : ''
        ].join(' ')
        publishDir = [
            path: { "${params.outdir}/${meta.sample_id}/blast" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: BLAST_FILTER_BITSCORE {
        ext.args = "--bit_diff ${params.blast_bitscore_diff}"
        publishDir = [
            path: { "${params.outdir}/${meta.sample_id}/blast/raw" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: CUTADAPT {
        ext.args = params.cutadapt_options
        publishDir = [
            path: { "${params.outdir}/cutadapt" },
            mode: params.publish_dir_mode,
            enabled: false
        ] 
    }
    withName: FASTP {
        publishDir = [
            path: { "${params.outdir}/FASTP" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }
    withName: PTRIMMER {
        publishDir = [
            path: { "${params.outdir}/ptrimmer" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }
    withName: PRIMER_DISAMBIGUATE {
        publishDir = [
            path: { "${params.outdir}/primers" },
            mode: params.publish_dir_mode,
            enabled: true
        ]
    }
    withName: VSEARCH_DEREPFULL {
        ext.args = [
            "--strand plus",
            "--sizeout",
            "--fasta_width 0",
            "-minuniquesize 2"
        ].join(' ')
    }
    withName: VSEARCH_CLUSTER_SIZE {
        ext.args = [
            "--strand plus",
            "--sizein",
            "--sizeout",
            "--relabel OTU_",
            "--id ${params.vsearch_cluster_id}"
        ].join(' ')
        publishDir = [
            path: { "${params.outdir}/OTUs" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: VSEARCH_CLUSTER_UNOISE {
        ext.args = [
            "--minsize 8",
            "--unoise_alpha 2"
        ].join(' ')
    }   
    withName: VSEARCH_FASTQFILTER {
        ext.args = [ 
            "--fastq_maxee ${params.vsearch_maxee}",
            "--fastq_minlen ${params.vsearch_minlen}",
            "--fastq_maxlen ${params.vsearch_maxlen}",
            "--fastq_maxn ${params.vsearch_maxn}"
        ].join(" ")
    }
    withName: VSEARCH_FASTQMERGE {
        ext.args = "--fastq_allowmergestagger"
    }
    withName: 'VSEARCH_FASTQMERGE|VSEARCH_FASTQFILTER' {
        publishDir = [
            path: { "${params.outdir}/vsearch/raw" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/custom" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }
    withName: GUNZIP_TAXONOMY {
        publishDir = [
            path: { "${params.reference_base}/foodme2/${params.reference_version}/midori" },
            mode: params.publish_dir_mode,
            enabled: true
        ]
    }
    withName: HELPER_FORMAT_MIDORI {
        publishDir = [
            path: { "${params.reference_base}/foodme2/${params.reference_version}/midori/${meta.id}" },
            mode: params.publish_dir_mode,
            enabled: true
        ]
    }
    withName: BLAST_MAKEBLASTDB {
        ext.args = "-dbtype nucl"
        publishDir = [
            path: { "${params.reference_base}/foodme2/${params.reference_version}/midori" },
            mode: params.publish_dir_mode,
            enabled: true
        ]
    }
}