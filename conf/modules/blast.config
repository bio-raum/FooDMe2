process {
    withName: HELPER_FILTER_TAXONOMY {
        publishDir = [
            path: { "${params.outdir}/blast" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: BLAST_BLASTN {
        ext.args = [
            "-task 'megablast'", 
            "-evalue ${params.blast_evalue}",
            "-perc_identity ${params.blast_perc_id}",
            "-outfmt '6 qseqid sseqid evalue pident bitscore sacc staxid length mismatch gaps sscinames'",
            params.disable_low_complexity ? "${params.blast_low_complexity}" : ''
        ].join(' ')
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/blast" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: HELPER_BLAST_FILTER_BITSCORE {
        ext.args = "--bit_diff ${params.blast_bitscore_diff}"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/blast" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: HELPER_FIND_CONSENSUS {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/blast/" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: HELPER_BLAST_STATS {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/reports/"},
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filenmae.equals('versions.yml') ? null : filename}
        ]
    }
    withName: HELPER_SAMPLE_COMPO {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/reports/"},
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filenmae.equals('versions.yml') ? null : filename}
        ]
    }
    withName: 'HELPER_CREATE_BLAST_MASK|HELPER_BLAST_APPLY_BLOCKLIST' {
        publishDir = [
            path: { "${params.outdir}/blast/" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}